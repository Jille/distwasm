name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  release_build_rust:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: "rustpeasant -> target"
    - run: rustup target add x86_64-unknown-linux-musl
    - run: cargo build --verbose --release  --target=x86_64-unknown-linux-musl
      working-directory: rustpeasant
    - name: Upload rust peasant binary for release
      uses: actions/upload-artifact@v3
      with:
        name: rust_peasant
        path: rustpeasant/target/x86_64-unknown-linux-musl/release/rustpeasant
        if-no-files-found: error
        retention-days: 1

  release_build_golang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version: ~1.18
    - name: Setup Golang caches
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: release-${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golang-
    - run: mkdir bins
    - name: Build king
      run: go build -v -o bins/king ./king
      env:
        CGO_ENABLED: 0
    - name: Build duke
      run: go build -v -o bins/duke ./duke
      env:
        CGO_ENABLED: 0
    - name: Upload golang binaries for release
      uses: actions/upload-artifact@v3
      with:
        name: golang_bins
        path: bins/
        if-no-files-found: error
        retention-days: 1

  create_release:
    needs:
      - release_build_rust
      - release_build_golang
    runs-on: ubuntu-latest
    steps:
    - name: Download rust binary
      uses: actions/download-artifact@v3
      with:
        name: rust_peasant
        path: bins/
    - name: Download golang binaries
      uses: actions/download-artifact@v3
      with:
        name: golang_bins
        path: bins/
    - run: mv bins/rustpeasant bins/peasant
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: bins/*
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
